{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/Container/Container.module.scss","components/Container/Container.jsx","components/Input/Input.jsx","components/ContactForm/ContactForm.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","App.jsx","hooks/useLocalStorage.js","utils/notiflix-options.js","index.js","components/Input/Input.module.scss","components/Contact/Contact.module.scss","components/ContactList/ContactList.module.scss"],"names":["module","exports","Container","children","className","s","container","Input","type","name","labelName","value","pattern","title","required","onChange","field","label","input","e","target","ContactForm","onSubmit","useState","setName","number","setNumber","clearForm","form","preventDefault","button","Contact","contact","ContactList","contacts","deleteContact","list","map","id","item","onClick","size","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","visibleContacts","normalizedFilter","toLowerCase","trim","includes","filterContacts","find","Report","warning","nanoid","length","contactId","Notiflix","init","width","backgroundColor","borderRadius","backOverlay","backOverlayColor","fontFamily","svgSize","plainText","titleFontSize","messageFontSize","buttonFontSize","cssAnimation","cssAnimationDuration","cssAnimationStyle","svgColor","titleColor","messageColor","buttonBackground","buttonColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0af298e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__1007G\",\"form\":\"ContactForm_form__1NiH1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3eZVY\"};","import s from './Container.module.scss';\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nexport { Container };\n","import PropTypes from 'prop-types';\nimport s from './Input.module.scss';\n\nfunction Input({\n  type = 'text',\n  name,\n  labelName,\n  value,\n  pattern,\n  title,\n  required = false,\n  onChange,\n}) {\n  return (\n    <label className={s.field}>\n      <span className={s.label}>{labelName}</span>\n      <input\n        className={s.input}\n        type={type}\n        name={name}\n        value={value}\n        pattern={pattern}\n        title={title}\n        required={required}\n        onChange={e => onChange(e.target.value)}\n      />\n    </label>\n  );\n}\n\nInput.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  labelName: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n  required: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport { Input };\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'components/Input';\nimport s from './ContactForm.module.scss';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({ name, number });\n    clearForm();\n  };\n\n  const clearForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <Input\n        type='text'\n        name='name'\n        labelName='Name'\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={setName}\n      />\n      <Input\n        type='tel'\n        name='number'\n        labelName='Number'\n        value={number}\n        pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\n        title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\n        required\n        onChange={setNumber}\n      />\n      <button className={s.button} type='submit'>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport { ContactForm };\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.scss';\n\nfunction Contact({ name, number }) {\n  return (\n    <article className={s.contact}>\n      <h3 className={s.name}>{name}</h3>\n      <p className={s.number}>{number}</p>\n    </article>\n  );\n}\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport { Contact };\n","import PropTypes from 'prop-types';\nimport { Contact } from 'components/Contact';\nimport { MdDelete } from 'react-icons/md';\nimport s from './ContactList.module.scss';\n\nfunction ContactList({ contacts, deleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          <Contact name={name} number={number} />\n\n          <button\n            className={s.button}\n            type='button'\n            onClick={() => deleteContact(id)}\n          >\n            <MdDelete size='30' />\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.string.isRequired }).isRequired,\n  ).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport { ContactList };\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Report } from 'notiflix';\nimport { Container } from 'components/Container';\nimport { ContactForm } from 'components/ContactForm';\nimport { Input } from 'components/Input/Input';\nimport { ContactList } from 'components/ContactList';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const handleSubmit = ({ name, number }) => {\n    contacts.find(contact => contact.name === name)\n      ? Report.warning(\n          `Can't add this contact!`,\n          `${name} is already in contacts.`,\n          'OK',\n        )\n      : setContacts(contacts => [{ id: nanoid(8), name, number }, ...contacts]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts =>\n      contacts.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  const filterContacts = () => {\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const visibleContacts = filterContacts();\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={handleSubmit} />\n\n      <h2>Contacts</h2>\n      <Input\n        type='text'\n        name='filter'\n        labelName='Find contacts by name'\n        value={filter}\n        onChange={setFilter}\n      />\n\n      {visibleContacts.length > 0 && (\n        <ContactList contacts={visibleContacts} deleteContact={deleteContact} />\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\n\nfunction useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(\n    () => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue,\n  );\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n\nexport { useLocalStorage };\n","import Notiflix from 'notiflix';\n\nNotiflix.Report.init({\n  className: 'notiflix-report',\n  width: '320px',\n  backgroundColor: '#f8f8f8',\n  borderRadius: '10px',\n  backOverlay: true,\n  backOverlayColor: 'rgba(0,0,0,0.5)',\n  fontFamily: 'Quicksand',\n  svgSize: '80px',\n  plainText: true,\n  titleFontSize: '18px',\n  messageFontSize: '16px',\n  buttonFontSize: '14px',\n  cssAnimation: true,\n  cssAnimationDuration: 300,\n  cssAnimationStyle: 'fade',\n\n  warning: {\n    svgColor: '#eebf31',\n    titleColor: '#1e1e1e',\n    messageColor: '#242424',\n    buttonBackground: '#eebf31',\n    buttonColor: '#fff',\n    backOverlayColor: 'rgba(0,0,0,0.5)',\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport 'notiflix/dist/notiflix-aio-3.1.0.min.js';\nimport 'utils/notiflix-options';\nimport 'modern-normalize/modern-normalize.css';\nimport 'styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"Input_field__2cpuc\",\"label\":\"Input_label__3sEkI\",\"input\":\"Input_input__3rPb3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__3nKSK\",\"name\":\"Contact_name__3ygJv\",\"number\":\"Contact_number__3XIGT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3wSXY\",\"button\":\"ContactList_button__197mh\",\"item\":\"ContactList_item__3lf8n\"};"],"sourceRoot":""}