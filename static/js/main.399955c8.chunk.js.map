{"version":3,"sources":["components/Container/Container.module.scss","components/Container/Container.jsx","components/Input/Input.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","App.jsx","components/Notiflix/notiflix-options.js","index.js","components/ContactList/ContactList.module.scss","components/Input/Input.module.scss","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","Container","children","className","s","container","Input","type","name","labelName","value","pattern","title","required","onChange","field","label","input","target","ContactForm","onSubmit","useState","setName","number","setNumber","clearForm","form","e","preventDefault","button","ContactList","contacts","deleteContact","list","map","id","item","onClick","size","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","visibleContacts","normalizedFilter","toLowerCase","trim","contact","includes","filterContacts","find","Report","warning","nanoid","contactId","Notiflix","init","width","backgroundColor","borderRadius","backOverlay","backOverlayColor","fontFamily","svgSize","plainText","titleFontSize","messageFontSize","buttonFontSize","cssAnimation","cssAnimationDuration","cssAnimationStyle","svgColor","titleColor","messageColor","buttonBackground","buttonColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.399955c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3eZVY\"};","import s from './Container.module.scss';\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nexport { Container };\n","import PropTypes from 'prop-types';\nimport s from './Input.module.scss';\n\nfunction Input({\n  type = 'text',\n  name,\n  labelName,\n  value,\n  pattern,\n  title,\n  required = false,\n  onChange,\n}) {\n  const handleChange = ({ target: { value } }) => {\n    onChange(value);\n  };\n\n  return (\n    <label className={s.field}>\n      <span className={s.label}>{labelName}</span>\n      <input\n        className={s.input}\n        type={type}\n        name={name}\n        value={value}\n        pattern={pattern}\n        title={title}\n        required={required}\n        onChange={handleChange}\n      />\n    </label>\n  );\n}\n\nInput.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  labelName: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n  required: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport { Input };\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from '../Input/Input';\nimport s from './ContactForm.module.scss';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({ name, number });\n    clearForm();\n  };\n\n  const clearForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <Input\n        type='text'\n        name='name'\n        labelName='Name'\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={setName}\n      />\n      <Input\n        type='tel'\n        name='number'\n        labelName='Number'\n        value={number}\n        pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\n        title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\n        required\n        onChange={setNumber}\n      />\n      <button className={s.button} type='submit'>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport { ContactForm };\n","import PropTypes from 'prop-types';\nimport { MdDelete } from 'react-icons/md';\nimport s from './ContactList.module.scss';\n\nfunction ContactList({ contacts, deleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          <p className={s.name}>{name}</p>\n          <p className={s.number}>{number}</p>\n          <button\n            className={s.button}\n            type='button'\n            onClick={() => deleteContact(id)}\n          >\n            <MdDelete size='30' />\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n  ).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport { ContactList };\n","import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Report } from 'notiflix';\nimport { Container } from './components/Container';\nimport { ContactForm } from './components/ContactForm';\nimport { Input } from './components/Input/Input';\nimport { ContactList } from './components/ContactList';\n\nfunction App() {\n  const [contacts, setContacts] = useState(\n    JSON.parse(window.localStorage.getItem('contacts')) ?? [],\n  );\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleSubmit = ({ name, number }) => {\n    contacts.find(contact => contact.name === name)\n      ? Report.warning(\n          `Can't add this contact!`,\n          `${name} is already in contacts.`,\n          'OK',\n        )\n      : setContacts(contacts => [{ id: nanoid(8), name, number }, ...contacts]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts =>\n      contacts.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  const filterContacts = () => {\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const visibleContacts = filterContacts();\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={handleSubmit} />\n\n      <h2>Contacts</h2>\n      <Input\n        type='text'\n        name='filter'\n        labelName='Find contacts by name'\n        value={filter}\n        onChange={setFilter}\n      />\n      <ContactList contacts={visibleContacts} deleteContact={deleteContact} />\n    </Container>\n  );\n}\n\nexport default App;\n","import Notiflix from 'notiflix';\n\nNotiflix.Report.init({\n  className: 'notiflix-report',\n  width: '320px',\n  backgroundColor: '#f8f8f8',\n  borderRadius: '10px',\n  backOverlay: true,\n  backOverlayColor: 'rgba(0,0,0,0.5)',\n  fontFamily: 'Quicksand',\n  svgSize: '80px',\n  plainText: true,\n  titleFontSize: '18px',\n  messageFontSize: '16px',\n  buttonFontSize: '14px',\n  cssAnimation: true,\n  cssAnimationDuration: 300,\n  cssAnimationStyle: 'fade',\n\n  warning: {\n    svgColor: '#eebf31',\n    titleColor: '#1e1e1e',\n    messageColor: '#242424',\n    buttonBackground: '#eebf31',\n    buttonColor: '#fff',\n    backOverlayColor: 'rgba(0,0,0,0.5)',\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport 'notiflix/dist/notiflix-aio-3.1.0.min.js';\nimport './components/Notiflix/notiflix-options';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3wSXY\",\"button\":\"ContactList_button__197mh\",\"item\":\"ContactList_item__3lf8n\",\"name\":\"ContactList_name__1ikjf\",\"number\":\"ContactList_number__36A13\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"Input_field__2cpuc\",\"label\":\"Input_label__3sEkI\",\"input\":\"Input_input__3rPb3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__1007G\",\"form\":\"ContactForm_form__1NiH1\"};"],"sourceRoot":""}